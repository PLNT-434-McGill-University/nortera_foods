---
title: "Relationship Between Yield of Processing Sweet Corn and Nitrogen (N) Rate"
subtitle: "Summary of results"
format:
  pdf:
    toc: true
    number-sections: true
    colorlinks: true
    warning: false
    message: false
    echo: false
---

```{r}
library(tidyverse)
library(kableExtra)
knitr::opts_chunk$set(fig.width = 9, fig.height = 4)
```



```{r}
#| warning: FALSE
read_csv("final_data.csv") |> 
  janitor::clean_names() |> 
  select(-harvested_date) |> 
  mutate_if(is_character, funs(str_remove(., "%"))) |> 
#  mutate_if(is_character, funs(str_replace(., ",", "."))) |> 
  mutate(variety = as_factor(variety)) |> 
  mutate_if(is_character, as.double) |> 
  mutate(across(c("weight_of_husks", "weight_of_ears", 
                  "percent_moisture", "percent_recoverry"), round, 2)) -> data
```

## Percent of recovery

The figure below shows an overall trend of % of recovery and N rates across the three sweet corn varieties. 

```{r}
data |> 
  ggplot(aes(x = rate, y = percent_recoverry, 
             color = variety, 
             fill = variety)) +
  facet_grid(~variety) +
  geom_jitter() +
  ylim(0,85) +
  geom_smooth(na.rm = TRUE, linewidth = 2) +
  theme_bw() +
  scale_x_continuous(breaks=c(0, 40, 80, 120, 160, 200)) +
  labs(x = expression(bold(paste("N rate (kg ha"^"-1",")"))), 
       y = "% recovery") +
  theme(legend.position="none",
        axis.title = element_text(face = "bold", size = 14),
        axis.text = element_text(size = 12),
        strip.text = element_text(face = "bold", size = 14)
        )
```

The table below shows the % of moisture and % of recovery at each N level across the three sweet corn varieties. 

```{r}
data |> 
  group_by(variety, rate) |> 
  summarise(moisture_mean = round(mean(percent_moisture, na.rm = TRUE),1),
    recovery_mean = round(mean(percent_recoverry, na.rm = TRUE),1)) |> 
  rename(Variety = variety,
         `N rate (kg/ha)` = rate,
         `% moisture` = moisture_mean,
         `% recovery` = `recovery_mean`) |> 
    kable(booktabs = T) |> 
  kable_styling(latex_options = c("striped", "hold_position"), full_width = F) |> 
  pack_rows("GH 6055", 1, 6) |> 
  pack_rows("GSS 3951", 7, 12) |> 
  pack_rows("GH 6462", 13, 18)
```

## Yield

The yield is calculated based on the of total ear weight by total number of harvested samples. I am not sure what is the weight unit used with the sweet corn samples. 

```{r}
data |> 
  mutate(yield1 = weight_of_ears / samples, na.rm=TRUE) |> 
  ggplot(aes(x = rate, y = yield1, 
             color = variety, 
             fill = variety)) +
  facet_grid(~variety) +
  geom_jitter() +
  ylim(0,1.5) +
  geom_smooth(na.rm = TRUE, linewidth = 2) +
  theme_bw() +
  scale_x_continuous(breaks=c(0, 40, 80, 120, 160, 200)) +
  labs(x = expression(bold(paste("N rate (kg ha"^"-1",")"))), 
       y = expression(bold(paste("Yield (XX sample"^"-1",")")))) +
  theme(legend.position="none",
        axis.title = element_text(face = "bold", size = 14),
        axis.text = element_text(size = 12),
        strip.text = element_text(face = "bold", size = 14))
```

Table below shows the average results for yield, including total weight, weight of husks, weight of ears, and weigh of kernels.

```{r}
data |> 
  select(variety, rate, samples, block, total_weight, weight_of_husks, weight_of_ears, weigh_of_kernels) |> 
  group_by(variety, rate) |> 
  summarise(samples = round(mean(samples, na.rm = TRUE),0),
            total_weight = round(mean(total_weight, na.rm = TRUE),1),
            weight_of_husks = round(mean(weight_of_husks, na.rm = TRUE),1),
            weight_of_ears = round(mean(weight_of_ears, na.rm = TRUE),1),
            weigh_of_kernels = round(mean(weigh_of_kernels, na.rm = TRUE),1)) |> 
  rename(Variety = variety,
         `N rate (kg/ha)` = rate,
         `Samples` = samples, 
         `Total weight` = total_weight,
         `Weight of husks` = weight_of_husks,
         `Weight of ears` = weight_of_ears,
         `Weight of kernels` = weigh_of_kernels) |> 
  kable(booktabs = T) |> 
  kable_styling(latex_options = c("striped", "hold_position", "scale_down"), full_width = FALSE) |> 
  pack_rows("GH 6055", 1, 6) |> 
  pack_rows("GSS 3951", 7, 12) |> 
  pack_rows("GH 6462", 13, 18)
```




## Height

Plant height, number of ears and ear insertion were assessed on August 09, 2023.

```{r}
#| warning: FALSE
readxl::read_excel("sweet corn data_9_aout.xlsx") |> 
  janitor::clean_names() |> 
  separate(insertion, into = c("ins1", "ins2", "ins3"), sep = "/") -> height
```

```{r}
height |> 
  left_join(data, by = c("plot_number" = "plot")) |> 
  select(1:10) |> 
  mutate_if(is_character, as.double) -> height1
```


```{r}
height1 |> 
  ggplot(aes(x = rate, y = height, color = variety, fill = variety)) +
#  geom_boxplot() +
  geom_jitter(alpha = 0.3) +
  geom_smooth(na.rm = TRUE, method = "lm", se = TRUE, linewidth = 2) +
  facet_grid(~variety) +
  ylim(0, 300) +
  labs(x = expression(bold(paste("N rate (kg ha"^"-1",")"))), 
       y = "Plant height (cm)") +
  theme_bw() +
  theme(legend.position="none",
        axis.title = element_text(face = "bold", size = 14),
        axis.text = element_text(size = 12),
        strip.text = element_text(face = "bold", size = 14)
        )
```




```{r}
height1 |> 
  group_by(variety, rate) |> 
  summarise(height_mean = round(mean(height),0)) -> height2
```

```{r}
height1 |> 
  group_by(plot_number, plant) |> 
  mutate(insertion = round(mean(c(ins1, ins2, ins3), na.rm = TRUE),0)) |> 
  group_by(variety, rate) |> 
  summarise(`number of ears` = round(mean(amount, na.rm = TRUE,0)), 
            `ear insertion` = round(mean(insertion, na.rm = TRUE),0)) -> height3
```

```{r}
height2 |> 
  left_join(height3) |> 
  rename(Variety = variety,
         `N rate (kg/ha)` = rate,
         `Plant height (cm)` = height_mean,
         `Number of ears` = `number of ears`,
         `Ear insertion (cm)` = `ear insertion`) |> 
  kable(booktabs = T) |> 
  kable_styling(latex_options = c("striped", "hold_position"), full_width = F) |>  
  pack_rows("GH 6055", 1, 6) |> 
  pack_rows("GSS 3951", 7, 12) |> 
  pack_rows("GH 6462", 13, 18)
```





